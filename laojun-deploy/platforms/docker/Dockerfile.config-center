# 配置中心服务 Dockerfile
# 构建阶段
FROM golang:1.23-alpine AS builder

WORKDIR /app

# 安装必要的包
RUN apk update && apk add --no-cache git ca-certificates tzdata

# 复制 go mod 文件
COPY go.mod go.work go.work.sum ./

# 复制子模块的 go.mod 文件
COPY pkg/plugins/go.mod ./pkg/plugins/
COPY pkg/shared/go.mod ./pkg/shared/
COPY tools/debug/go.mod ./tools/debug/
COPY tools/plugin-cli/go.mod ./tools/plugin-cli/
COPY tools/swagger/go.mod ./tools/swagger/

# 配置 Go 工具链自动升级与代理
ENV GOTOOLCHAIN=auto
ENV GOPROXY=https://goproxy.cn,direct

# 下载依赖
RUN go mod download

# 复制源代码
COPY . .

# 构建配置中心服务
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags='-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -o config-center ./cmd/config-center

# 运行阶段
FROM redis:7-alpine

# 安装运行时依赖
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    curl

# 创建非 root 用户
RUN addgroup -g 1001 appgroup && \
    adduser -u 1001 -G appgroup -s /bin/sh -D appuser

# 创建应用目录
RUN mkdir -p /app/bin /app/configs /app/logs

# 复制二进制文件
COPY --from=builder /app/config-center /app/bin/

# 设置权限
RUN chown -R appuser:appgroup /app && chmod +x /app/bin/config-center

# 切换到非 root 用户
USER appuser

# 设置工作目录
WORKDIR /app

# 暴露端口
EXPOSE 8081

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8081/health || exit 1

# 启动服务
CMD ["/app/bin/config-center"]